- distribution of error seems to be pretty robust across sd and bound_sd, affected more by epsilon/n

Implementation Notes
====================
- not sure about exact rounding on + and *
    - using same precision necessary for log
- need to round to nearest multiple of a given power of 2 via IEEE manipulation

Theory Notes
============
- Change utility definition to allow for easier derivation?
    - e.g. squared error rather than absolute value?


07/31/19 Meeting Notes
======================
- think about how this compares to finite computers approach
    - Salil will want to know

- look up fp precision vs. encoding
- look into how difficult it would be to introduce lower/upper bound instead of just B
    - Analyze Gauss (Dwork) -- look at this as example
    - could rescale data to be symmetric?

- think about how to call snapping mechanism within existing architecture

- send James new graph with higher n and less epsilon

- could try to port to R or port to c++
    - look into c++ implementation eventually

- put latex notes into overleaf
=============================================================================================



- In Mironov, don't really understand Lemma 1 -- what do over/under mu mean practically?
    - note that mu ~ Unif, y is output of the mechanism

- exact rounding of operations implies that the result of an operation has relative error of at most
  1 + eta -- why is this sometimes in the denominator?

- could possibly improve privacy bound even more by reducing eta?
    - eta will be 2^precision, so if we can use mpfr throughout, then could reduce
      the effect of eta in the privacy proof

- consider how to rescale input such that we can minimize B -- privacy guarantee is a function of B
  and larger B requires more noise addition within the inner Laplace to get the desired level of privacy,
  perhaps descreasing utility?
    - doesn't seem, at first glance, that this could be enough to reduce utility in the way that people seem to think?
      B affects the epsilon redefinition unless utility is much more sensitive to the Laplace parameter than I think
